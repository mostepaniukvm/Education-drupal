<?php

/**
  * Implements hook_menu()
  */
function my_forms_menu() {
  $items = array();
  $items['contacts'] = array(
    'title' => 'Contacts',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_forms_form'),
    'access arguments' => array('permission contact'),
    'menu_name' => 'main-menu',
    'weight' => 2,
  ); 
  return $items;
}

/**
 * Impements hook_permission()
 */
function my_forms_permission() {
  $perm = array(
    'permission contact' => array(
      'title' => t('permission contact'), 
    ),
  );
  return $perm;
}

/**
 * Build form function.
 */
function my_forms_form($form, &$form_state) {
  $form['#prefix'] = '<div id="my-forms-form-wrapper">';
  $form['#suffix'] = '</div>';
  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name') . ':',
    '#description' => t("Input your name"),
  );
  $form['surname'] = array(
    '#type' => 'textfield',
    '#title' => t('Surname') . ':',
    '#description' => t("Input your surname"),
  );
  $form['nickname'] = array(
    '#type' => 'textfield',
    '#title' => t('Nickname') . ':',
    '#description' => t("Input your nickname"),
    '#required' => TRUE,
  );
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email') . ':',
    '#description' => t("Input your email"),
    '#required' => TRUE,
    '#element_validate' => array('validate_email'),
  );
  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone number:'),
    '#description' => t("Please enter your phone number"),
    '#field_prefix' => '+380',
  );
  $form['country'] = array(
    '#type' => 'select',
    '#title' => t('Your country:'),
    '#description' => t("Choose your country"),
    '#options' => array(
      'Ukraine' => t('Ukraine'),
      'Russia' => t('Russia'),
      'USA' =>  t('USA'),
    ),
  );
  $form['sex'] = array(
    '#type' => 'radios',
    '#title' => t('Sex') . ':',
    '#description' => t("Choose your sex"),
    '#options' => array(
      'Men' => t('Men'),
      'Women' => t('Women'),
    ),
  );
  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Input message'),
    '#required' => TRUE,
  );
  $form['approval'] = array(
    '#type' => 'checkbox',
    '#title' => t('Approval of rules'),
    '#required' => TRUE,
  );
  $form['fiedlset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Enter all values'),
    '#collapsible' => TRUE,
    '#description' => t('Desirable enter all values')
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * Validate function for mail.
 */
function validate_email($form, &$form_state) {
  // // First variant of validate.
  // if (!valid_email_address($form_state['values']['email'])) {
  //   form_set_error('email', t('Your email is not valid'));
  // }

  // Second variant of validate.
  if (!check_email($form_state['values']['email'])) {
    form_set_error('email', t('Your email is not valid'));
  }
}

/**
 * Function for checking email. This function is copied.
 */
function check_email($email) {
  if (!preg_match("/^[^@]{1,64}@[^@]{1,255}$/", $email)) {
    return false;
  }
  $email_array = explode("@", $email);
  $local_array = explode(".", $email_array[0]);
  for ($i = 0; $i < count($local_array); $i++) {
    if (!preg_match("/^(([A-Za-z0-9!#$%&'*+\/=?^_`{|}~-][A-Za-z0-9!#$%&'*+\/=?^_`{|}~\.-]{0,63})|(\"[^(\\|\")]{0,62}\"))$/", $local_array[$i])) {
      return false;
    }
  }
  if (!preg_match("/^\[?[0-9\.]+\]?$/", $email_array[1])) {
    $domain_array = explode(".", $email_array[1]);
    if (count($domain_array) < 2) {
      return false;
    }
    for ($i = 0; $i < sizeof($domain_array); $i++) {
      if (!preg_match("/^(([A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9])|([A-Za-z0-9]+))$/", $domain_array[$i])) {
        return false;
      }
    }
  }
  return true;
}

/**
 * Validate function for my_form.
 */
function my_forms_form_validate($form, &$form_state) {
  if (!empty($form_state['values']['phone']) && !is_numeric($form_state['values']['phone'])) {
   form_set_error('phone', t('Phone number must be numeric'));
  }
  if (!empty($form_state['values']['phone']) && strlen($form_state['values']['phone']) != 9) {
    form_set_error('phone', t('Must be 9 figures'));
  }
}

/**
 * Submit function for my_form.
 */
function my_forms_form_submit($form, &$form_state) {
  $keys = array('name', 'surname', 'nickname', 'email', 'phone', 'country', 'sex', 'message');
  foreach ($keys as $key => $value) {
    $output = !empty($form_state['values'][$value]) ? $form_state['values'][$value] : 'None';
    $message = ucfirst(t($value)) . ': ' . $output;
    drupal_set_message($message);
  }
}

/**
 * Implements hook_form_alter().
 */
function my_forms_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'my_forms_form') {
    $form['field_textarea'] = array(
      '#type' => 'textarea',
      '#title' => t('New textarea from form_alter'),
    );
  }
}
